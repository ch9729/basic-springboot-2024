{"ast":null,"code":"var _jsxFileName = \"C:\\\\work\\\\basic-springboot-2024\\\\react01\\\\basic-app\\\\src\\\\component\\\\CustomButton.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CustomButton(props) {\n  let heroName = props.data.heroName;\n  let isLoggedIn = false; //로그인여부\n  let content;\n  console.log(heroName);\n  function handleClick(name) {\n    if (isLoggedIn) {\n      alert(name + \"이 로그아웃 되었습니다.\");\n    } else {\n      alert(name + \"이 로그인 합니다.\");\n    }\n  }\n\n  // if(isLoggedIn) {\n  //     content = <button>Log Out</button>;\n  // }else {\n  //     content = <button>Log In</button>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(heroName),\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(heroName),\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_c = CustomButton;\nexport default CustomButton; // 외부에서 사용하려면 필수!!\nvar _c;\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"names":["CustomButton","props","heroName","data","isLoggedIn","content","console","log","handleClick","name","alert","_jsxDEV","_Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/work/basic-springboot-2024/react01/basic-app/src/component/CustomButton.js"],"sourcesContent":["function CustomButton(props) {\r\n\r\n    let heroName = props.data.heroName;\r\n    let isLoggedIn = false; //로그인여부\r\n    let content;\r\n\r\n    console.log(heroName);\r\n\r\n    function handleClick(name) {\r\n        if(isLoggedIn) {\r\n            alert(name + \"이 로그아웃 되었습니다.\");\r\n        }else {\r\n            alert(name + \"이 로그인 합니다.\");\r\n        }\r\n    }\r\n \r\n    // if(isLoggedIn) {\r\n    //     content = <button>Log Out</button>;\r\n    // }else {\r\n    //     content = <button>Log In</button>\r\n    // }\r\n\r\n    return (\r\n        <>\r\n        {/* {content} */}\r\n        {\r\n            isLoggedIn ?(\r\n             <button onClick={() => handleClick(heroName)}>Log Out</button>\r\n            ) : (\r\n                <button onClick={() => handleClick(heroName)}>Log In</button>\r\n            )\r\n        }\r\n        </>\r\n      \r\n    )\r\n  }\r\n\r\nexport default CustomButton;    // 외부에서 사용하려면 필수!!"],"mappings":";;AAAA,SAASA,YAAYA,CAACC,KAAK,EAAE;EAEzB,IAAIC,QAAQ,GAAGD,KAAK,CAACE,IAAI,CAACD,QAAQ;EAClC,IAAIE,UAAU,GAAG,KAAK,CAAC,CAAC;EACxB,IAAIC,OAAO;EAEXC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EAErB,SAASM,WAAWA,CAACC,IAAI,EAAE;IACvB,IAAGL,UAAU,EAAE;MACXM,KAAK,CAACD,IAAI,GAAG,eAAe,CAAC;IACjC,CAAC,MAAK;MACFC,KAAK,CAACD,IAAI,GAAG,YAAY,CAAC;IAC9B;EACJ;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACIE,OAAA,CAAAC,SAAA;IAAAC,QAAA,EAGIT,UAAU,gBACTO,OAAA;MAAQG,OAAO,EAAEA,CAAA,KAAMN,WAAW,CAACN,QAAQ,CAAE;MAAAW,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAE3DP,OAAA;MAAQG,OAAO,EAAEA,CAAA,KAAMN,WAAW,CAACN,QAAQ,CAAE;MAAAW,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAC/D,gBAEH,CAAC;AAGT;AAACC,EAAA,GAnCMnB,YAAY;AAqCrB,eAAeA,YAAY,CAAC,CAAI;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}